# -*- coding: utf-8 -*-
"""ECode.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hNU7P9gcuGH8assKhGJI6jg2dlZVBcdt

**Importing Libraries**
"""

from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.svm import SVC
import pandas as pd
import json

"""**Task1**"""

# Load the JSON files
with open('18246.json', 'r') as f:
    data1 = json.load(f)
with open('16859.json', 'r') as f:
    data2 = json.load(f)
with open('12387.json', 'r') as f:
    data3 = json.load(f)

# Load the csv file
dfo = pd.read_csv("to_fill.csv")

# Extract the relevant data from each JSON file
def extract_data(data):
    body = data['text']
    start = data['words'][0]['start']
    end = data['words'][-1]['end']
    return body, start, end

body1, start1, end1 = extract_data(data1)
body2, start2, end2 = extract_data(data2)
body3, start3, end3 = extract_data(data3)

# Create a dataframe with the extracted data

dfo["body"] = body1
dfo["start"] = start1
dfo["end"] = end1

# Print the resulting dataframe
print(dfo)

"""**Task2**"""

# Load the csv file
df = pd.read_csv("stories.csv")

# vectorize the stories using TF-IDF representation
vectorizer = TfidfVectorizer(stop_words='english', max_df=0.75)
story_vectors = vectorizer.fit_transform(df['body'])

# train a Support Vector Machine model
clf = SVC(kernel='linear')
clf.fit(story_vectors, df['topic'])

# predict topics for the stories in the dataframe
predicted_topics = clf.predict(story_vectors)

# add the predicted topics as a new column in the dataframe
df['topics'] = predicted_topics.tolist()
print(df['topics'])